{{>partial_header}}
package main

import (
	"context"
	"fmt"
	"log"
	"net/http"
	"os"
	"os/signal"
	"syscall"
	"time"

	// WARNING!
	// Change this to a fully-qualified import path
	// once you place this file into your project.
	// For example,
	//
	//    sw "github.com/myname/myrepo/{{apiPath}}"
	//
	sw "github.com/ZolaraProject/{{apiPath}}/{{packageName}}"
)

func main() {
	log.Printf("Server started hosting '{{appName}}' version '{{appVersion}}'.")

	termChan := make(chan os.Signal)
	signal.Notify(termChan, syscall.SIGTERM) // Received after the preStop hook

	server := http.Server{
		Addr:    fmt.Sprintf(":%v", {{serverPort}}),
		Handler: sw.NewRouter(sw.JwtSecretKey),
	}

	go server.ListenAndServe()

	select {
	case c := <-termChan:
		log.Printf("Received signal %v, stopping gracefully", c)
		ctx, cancel := context.WithTimeout(context.Background(), time.Second*10)
		defer cancel()
		server.Shutdown(ctx)
		log.Printf("Server stopped, exiting. ")
	}
}
